

An array in Java is a collection of variables that are of the same type.
Arrays are used to store multiple values in a single variable,
instead of declaring separate variables for each value.
They are particularly useful when you need to work with lists of items such as numbers, names, or other data.
 Arrays have a fixed size, meaning that once they are created, their size cannot be changed.

Creating Arrays
In Java, you can create arrays in several ways. Here’s how to declare and initialize an array:





// Declaring an array of integers
int[] numbers;

// Initializing an array of integers with a size of 5
numbers = new int[IntExpression]; ===> int[5] ;

IntExpression is any expression that evaluates to a positive int type.[2*i-5]
IntExpression represents the size ot the array==> This is the number of elements in the array
The size of the array must be int value


//What is the index ===> see the picture


// Declaring and initializing an array in one step
int[] moreNumbers = {1, 2, 3, 4, 5};
Double[] values=new Double[5];		//zero
char[]   characters=new Char[2];        //null




Accessing Array Elements
Array elements are accessed using their index, which starts at 0.
Here’s how to access and modify array elements:



// Accessing the first element of the array
int firstNumber = moreNumbers[0];

// Modifying the second element of the array
moreNumbers[1] = 10;

Examples of Using Arrays


---------------------------------------------------------------------------

Example 1: Basic Array Operations

public class ArrayExample {
    public static void main(String[] args) {
        // Declaring and initializing an array of integers
        int[] numbers = {10, 20, 30, 40, 50};

        // Accessing and printing array elements
        System.out.println("First element: " + numbers[0]); // Output: 10
        System.out.println("Second element: " + numbers[1]); // Output: 20

        // Modifying an array element
        numbers[2] = 35;

        // Printing all array elements using a for loop
        System.out.println("Array elements:");
        for (int i = 0; i < numbers.length; i++) {
            System.out.println(numbers[i]);
        }
    }
}




--------------------------------------------------------------------------
Example 2: Finding the Sum of Array Elements


public class ArraySum {
    public static void main(String[] args) {
        // Declaring and initializing an array of integers
        int[] numbers = {5, 10, 15, 20, 25};

        // Calculating the sum of all array elements
        int sum = 0;
        for (int i = 0; i < numbers.length; i++) {
            sum += numbers[i];
        }

        // Printing the sum
        System.out.println("Sum of array elements: " + sum); // Output: 75
    }
}


---------------------------------------------------------------------------------
Example 3: Finding the Maximum Element in an Array

public class ArrayMax {
    public static void main(String[] args) {
        // Declaring and initializing an array of integers
        int[] numbers = {3, 7, 2, 9, 4};

        // Finding the maximum element
        int max = numbers[0];
        for (int i = 1; i < numbers.length; i++) {
            if (numbers[i] > max) {
                max = numbers[i];
            }
        }

        // Printing the maximum element
        System.out.println("Maximum element: " + max); // Output: 9
    }
}

------------------------------------------------------------------------

Task 1
	-make simple array for employees salaries  and ask the user to enter the size of the array
	then take each empolyee's salary from the user .. finally print all entered salary and the sum of these entries


solution:

 	  Scanner scanner=new Scanner(System.in);
        System.out.println("plz enter the size of the array");
        int  input=scanner.nextInt();
        double[] salaries=new double[input];

        System.out.println(salaries.length);
        for (int counter = 0; counter < salaries.length; counter++) {
            System.out.println("plz enter the salary of empolyee "+ counter);
            int salary=scanner.nextInt();
            salaries[counter]=salary;
        }


        //Printing all salaries
        for (int counter=0;counter<=salaries.length-1;counter++){
            System.out.println(salaries[counter]);
        }
    }












---------------------------------------------------------------------------------------


    -----------------------Problem: Storing and Calculating Grades for a Class-------------------------
Imagine you are a teacher who needs to store and calculate the average grades for a class of students.
 You want to be able to quickly and efficiently calculate the average grade of the students,
 identify the highest and lowest grades,
and count how many students passed or failed based on a passing grade threshold.

Solution: Using Arrays in Java
Arrays can help solve this problem by allowing you to store all the students' grades in a single data structure.
You can then perform various operations on the array, such as calculating the average grade,
finding the highest and lowest grades, and counting the number of students who passed or failed.

Steps to Solve the Problem
Store Grades in an Array: Use an array to store the grades of all students.
Calculate Average Grade: Iterate through the array to sum the grades and then
 divide by the number of students to find the average.
Find Highest and Lowest Grades: Iterate through the array to find the maximum and minimum values.
Count Passing and Failing Students: Iterate through the array and count
how many grades are above or below the passing threshold.

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        // Use functions to implement this task uaAlaa
        // Get the number of students to set the array size
        // Create an array to store grades
        // Get the grades from the user
        // Calculate the average grade
        // Find the highest and lowest grades
        // Define passing grade threshold
        // Count passing and failing students
        int length= getSize();
        double[] grades=new double[length]; //declaring and initializing the array
        double[] newGrades=getAllgrades(length,grades);
        printingAllArrayItems(newGrades);
        double average=average(newGrades);
        System.out.println("The average of all grades is : "+average);
       double highestDegree= highestGrade(newGrades);
       double lowestDegree=lowestGrade(newGrades);

       System.out.println("the highest grade is : "+highestDegree);
       System.out.println("the lowest grade is : "+lowestDegree);

       int[] filteredStudents=filtering(60,newGrades);
       System.out.println("Number of Students passed is : "+filteredStudents[0]);
        System.out.println("Number of Students failed is : "+filteredStudents[1]);
    }

    static int getSize(){
        Scanner scanner=new Scanner(System.in);
        System.out.println("Enter the size of your array :");
        int number=scanner.nextInt();
        return number;
    }

    static double[] getAllgrades(int length,double[] x){
        Scanner scanner=new Scanner(System.in);
        int counter=0;
        while(counter<length){
            System.out.println("please enter the grade of the student "+(counter+1));
            double studentGrade=scanner.nextDouble();
            x[counter]=studentGrade;
            counter++;
        }
        return x;
    }

    static void printingAllArrayItems(double[] z){
        for (int i = 0; i < z.length; i++) {
            System.out.println(z[i]);
        }
    }

    static double average(double[] allGrades){
        int counter=0;
        int sum=0;
        while(counter<allGrades.length){
            sum+=allGrades[counter];
            counter++;
        }
        return (sum/counter);
    }
    static double highestGrade(double[] mohamed){
        //20,49,59,10,100
        double highestGrade=mohamed[0];
        int counter=0;
        while(counter<mohamed.length){
            if( mohamed[counter]>highestGrade){
                highestGrade=mohamed[counter];
            }
            counter++;
        }
        return highestGrade;
    }

    static double lowestGrade(double[] alaa){

        double lowestGrade=alaa[0];
        int counter=0;
        while(counter<alaa.length){
            if( alaa[counter]<lowestGrade){
                lowestGrade =alaa[counter];           }
            counter++;
        }
      return lowestGrade ;
    }

    static int[] filtering(int threshold,double [] allGrades){
        int[] passedAndFailedStudents=new int[2];
        //20,49,59,10,100
        int passed=0;
        int failed=0;
        for (int i = 0; i < allGrades.length; i++) {
            if(allGrades[i]<threshold){
                failed++;
            }else{
                passed++;
            }
        }
        passedAndFailedStudents[0]=passed;
        passedAndFailedStudents[1]=failed;
        return passedAndFailedStudents;
    }
}

